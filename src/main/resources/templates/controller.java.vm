package ${package.Controller};

import javax.validation.constraints.*;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end


import ${package.Entity}.${table.entityName};
import ${package.Service}.${table.serviceName};
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotEmpty;
import java.util.List;

/**
 * @author $!{author}
 * Description $!{table.comment} 服务实现类
 * Date $!{cfg.date}
 * Time $!{cfg.time}
 * Mail $!{cfg.email}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end

@Resource
private ${table.serviceName} #foreach($item in ${cfg.page})#if(
    "${table.entityName}" == "${item.key}")${item.serviceName}#end#end;

// ===================== 管理员接口 ====================
// ======== 通常需要添加权限验证
// ======== $!{cfg.date} $!{cfg.time}

/**
 * @description 新增
 * @author $!{author}
 * @email $!{cfg.email}
 * @date $!{cfg.date} $!{cfg.time}
 */
@ApiOperation("新增")
@PutMapping("/admin/insert")
public ResultBean<Boolean> adminInsert(@RequestBody List<${entity}> p${entity}List){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if("${table.entityName}" ==
        "${item.key}")${item.serviceName}#end#end.adminInsert(p${entity}List),ErrorCodeInfo.CREATED);
        }

/**
 * @description 删除
 * @author $!{author}
 * @email $!{cfg.email}
 * @date $!{cfg.date} $!{cfg.time}
 */
@ApiOperation("删除")
@DeleteMapping("/admin/delete")
public ResultBean<Boolean> adminDelete(@NotEmpty(message = "删除的id列表不能为空") @RequestBody List<String> pIdList){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if("${table.entityName}" ==
        "${item.key}")${item.serviceName}#end#end.adminDelete(pIdList),ErrorCodeInfo.NO_CONTENT);
        }

/**
 * @description 分页查询
 * @author $!{author}
 * @email $!{cfg.email}
 * @date $!{cfg.date} $!{cfg.time}
 */
@ApiOperation("分页查询")
@GetMapping("/admin/page")
public ResultBean<Page<${entity}>>adminPage(@Min(value = -1, message = "页码过小") int pPageNum,int pPageSize,@RequestBody ${entity} p${entity}){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if("${table.entityName}" ==
        "${item.key}")${item.serviceName}#end#end.adminPage(pPageNum,pPageSize,p${entity}),ErrorCodeInfo.OK);
        }

/**
 * @description 更新
 * @author $!{author}
 * @email $!{cfg.email}
 * @date $!{cfg.date} $!{cfg.time}
 */
@ApiOperation("更新")
@PostMapping("/admin/update")
public ResultBean<Boolean> adminUpdate(@Validated(value = ${entity}.Update.class) @RequestBody List<${entity}> p${entity}List){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if("${table.entityName}" ==
        "${item.key}")${item.serviceName}#end#end.adminUpdate(p${entity}List),ErrorCodeInfo.OK);
        }

// ===================== 用户接口 ====================
// ======== 可以设置权限等级或者不设置权限
// ======== $!{cfg.date} $!{cfg.time}


// ===================== 预留接口 ====================
// ======== 代码生成的时候添加的预留接口
// ======== $!{cfg.date} $!{cfg.time}


/**
 * @description 预留接口
 */
public ResultBean<Object> reserved1(){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if(
        "${table.entityName}" == "${item.key}")${item.serviceName}#end#end.reserved1(),ErrorCodeInfo.OK);
        }

/**
 * @description 预留接口
 */
public ResultBean<Object> reserved2(){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if(
        "${table.entityName}" == "${item.key}")${item.serviceName}#end#end.reserved2(),ErrorCodeInfo.OK);
        }

/**
 * @description 预留接口
 */
public ResultBean<Object> reserved3(){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if(
        "${table.entityName}" == "${item.key}")${item.serviceName}#end#end.reserved3(),ErrorCodeInfo.OK);
        }

/**
 * @description 预留接口
 */
public ResultBean<Object> reserved4(){
        return ResultBean.restResult(#foreach($item in ${cfg.page})#if(
        "${table.entityName}" == "${item.key}")${item.serviceName}#end#end.reserved4(),ErrorCodeInfo.OK);
        }
        }

#end